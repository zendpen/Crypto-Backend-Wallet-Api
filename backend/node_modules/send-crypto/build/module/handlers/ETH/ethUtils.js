import Web3 from "web3";
export const getWeb3 = (privateKey, endpoint) => {
    // const provider = new HDWalletProvider(privateKey, endpoint);
    const web3 = new Web3(endpoint);
    const account = web3.eth.accounts.privateKeyToAccount("0x" + privateKey);
    web3.eth.accounts.wallet.add(account);
    // tslint:disable-next-line: no-object-mutation
    web3.eth.defaultAccount = account.address;
    // return new Web3(provider as any);
    return [web3, account.address];
};
// Free tier - only used as a fallback.
const defaultInfuraKey = "3b7a6c29f9c048d688a848899888aa96";
export const getEndpoint = (network, ethereumNode, infuraKey) => {
    return ethereumNode
        ? ethereumNode
        : `https://${network}.infura.io/v3/${infuraKey || defaultInfuraKey}`;
};
export var Network;
(function (Network) {
    Network["Mainnet"] = "mainnet";
    Network["Ropsten"] = "ropsten";
    Network["Kovan"] = "kovan";
    Network["Rinkeby"] = "rinkeby";
    Network["G\u00F6rli"] = "goerli";
})(Network || (Network = {}));
export const getNetwork = (network) => {
    switch (network.toLowerCase()) {
        case "mainnet":
        case "main":
            return Network.Mainnet;
        case "kovan":
            return Network.Kovan;
        case "rinkeby":
            return Network.Rinkeby;
        case "görli":
        case "goerli":
        case "gorli":
            return Network.Görli;
        case "ropsten":
        case "testnet":
        default:
            return Network.Ropsten;
    }
};
export const getTransactionConfig = (options) => {
    const txConfig = {};
    // tslint:disable: no-object-mutation
    if (options.from) {
        txConfig.from = options.from;
    }
    if (options.from) {
        txConfig.from = options.from;
    }
    // if (options.to) { txConfig.to = options.to; }
    if (options.gasPrice) {
        txConfig.gasPrice = options.gasPrice;
    }
    if (options.gas) {
        txConfig.gas = options.gas;
    }
    if (options.value) {
        txConfig.value = options.value;
    }
    if (options.data) {
        txConfig.data = options.data;
    }
    if (options.nonce) {
        txConfig.nonce = options.nonce;
    }
    // if (options.chainId) { txConfig.chainId = options.chainId; }
    // if (options.common) { txConfig.common = options.common; }
    // if (options.chain) { txConfig.chain = options.chain; }
    // if (options.hardfork) { txConfig.hardfork = options.hardfork; }
    return txConfig;
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXRoVXRpbHMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvaGFuZGxlcnMvRVRIL2V0aFV0aWxzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sSUFBSSxNQUFNLE1BQU0sQ0FBQztBQUd4QixNQUFNLENBQUMsTUFBTSxPQUFPLEdBQUcsQ0FDbkIsVUFBa0IsRUFDbEIsUUFBZ0IsRUFDRixFQUFFO0lBQ2hCLCtEQUErRDtJQUMvRCxNQUFNLElBQUksR0FBRyxJQUFJLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUNoQyxNQUFNLE9BQU8sR0FBRyxJQUFJLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxtQkFBbUIsQ0FBQyxJQUFJLEdBQUcsVUFBVSxDQUFDLENBQUM7SUFDekUsSUFBSSxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxPQUFPLENBQUMsQ0FBQztJQUN0QywrQ0FBK0M7SUFDL0MsSUFBSSxDQUFDLEdBQUcsQ0FBQyxjQUFjLEdBQUcsT0FBTyxDQUFDLE9BQU8sQ0FBQztJQUMxQyxvQ0FBb0M7SUFDcEMsT0FBTyxDQUFDLElBQUksRUFBRSxPQUFPLENBQUMsT0FBTyxDQUFDLENBQUM7QUFDbkMsQ0FBQyxDQUFDO0FBRUYsdUNBQXVDO0FBQ3ZDLE1BQU0sZ0JBQWdCLEdBQUcsa0NBQWtDLENBQUM7QUFFNUQsTUFBTSxDQUFDLE1BQU0sV0FBVyxHQUFHLENBQ3ZCLE9BQTJCLEVBQzNCLFlBQWdDLEVBQ2hDLFNBQTZCLEVBQy9CLEVBQUU7SUFDQSxPQUFPLFlBQVk7UUFDZixDQUFDLENBQUMsWUFBWTtRQUNkLENBQUMsQ0FBQyxXQUFXLE9BQU8saUJBQWlCLFNBQVMsSUFBSSxnQkFBZ0IsRUFBRSxDQUFDO0FBQzdFLENBQUMsQ0FBQztBQUVGLE1BQU0sQ0FBTixJQUFZLE9BTVg7QUFORCxXQUFZLE9BQU87SUFDZiw4QkFBbUIsQ0FBQTtJQUNuQiw4QkFBbUIsQ0FBQTtJQUNuQiwwQkFBZSxDQUFBO0lBQ2YsOEJBQW1CLENBQUE7SUFDbkIsZ0NBQWdCLENBQUE7QUFDcEIsQ0FBQyxFQU5XLE9BQU8sS0FBUCxPQUFPLFFBTWxCO0FBRUQsTUFBTSxDQUFDLE1BQU0sVUFBVSxHQUFHLENBQUMsT0FBZSxFQUFXLEVBQUU7SUFDbkQsUUFBUSxPQUFPLENBQUMsV0FBVyxFQUFFLEVBQUU7UUFDM0IsS0FBSyxTQUFTLENBQUM7UUFDZixLQUFLLE1BQU07WUFDUCxPQUFPLE9BQU8sQ0FBQyxPQUFPLENBQUM7UUFFM0IsS0FBSyxPQUFPO1lBQ1IsT0FBTyxPQUFPLENBQUMsS0FBSyxDQUFDO1FBRXpCLEtBQUssU0FBUztZQUNWLE9BQU8sT0FBTyxDQUFDLE9BQU8sQ0FBQztRQUUzQixLQUFLLE9BQU8sQ0FBQztRQUNiLEtBQUssUUFBUSxDQUFDO1FBQ2QsS0FBSyxPQUFPO1lBQ1IsT0FBTyxPQUFPLENBQUMsS0FBSyxDQUFDO1FBRXpCLEtBQUssU0FBUyxDQUFDO1FBQ2YsS0FBSyxTQUFTLENBQUM7UUFDZjtZQUNJLE9BQU8sT0FBTyxDQUFDLE9BQU8sQ0FBQztLQUM5QjtBQUNMLENBQUMsQ0FBQztBQUVGLE1BQU0sQ0FBQyxNQUFNLG9CQUFvQixHQUFHLENBQ2hDLE9BQVUsRUFDTyxFQUFFO0lBQ25CLE1BQU0sUUFBUSxHQUFRLEVBQUUsQ0FBQztJQUN6QixxQ0FBcUM7SUFDckMsSUFBSSxPQUFPLENBQUMsSUFBSSxFQUFFO1FBQ2QsUUFBUSxDQUFDLElBQUksR0FBRyxPQUFPLENBQUMsSUFBSSxDQUFDO0tBQ2hDO0lBQ0QsSUFBSSxPQUFPLENBQUMsSUFBSSxFQUFFO1FBQ2QsUUFBUSxDQUFDLElBQUksR0FBRyxPQUFPLENBQUMsSUFBSSxDQUFDO0tBQ2hDO0lBQ0QsZ0RBQWdEO0lBQ2hELElBQUksT0FBTyxDQUFDLFFBQVEsRUFBRTtRQUNsQixRQUFRLENBQUMsUUFBUSxHQUFHLE9BQU8sQ0FBQyxRQUFRLENBQUM7S0FDeEM7SUFDRCxJQUFJLE9BQU8sQ0FBQyxHQUFHLEVBQUU7UUFDYixRQUFRLENBQUMsR0FBRyxHQUFHLE9BQU8sQ0FBQyxHQUFHLENBQUM7S0FDOUI7SUFDRCxJQUFJLE9BQU8sQ0FBQyxLQUFLLEVBQUU7UUFDZixRQUFRLENBQUMsS0FBSyxHQUFHLE9BQU8sQ0FBQyxLQUFLLENBQUM7S0FDbEM7SUFDRCxJQUFJLE9BQU8sQ0FBQyxJQUFJLEVBQUU7UUFDZCxRQUFRLENBQUMsSUFBSSxHQUFHLE9BQU8sQ0FBQyxJQUFJLENBQUM7S0FDaEM7SUFDRCxJQUFJLE9BQU8sQ0FBQyxLQUFLLEVBQUU7UUFDZixRQUFRLENBQUMsS0FBSyxHQUFHLE9BQU8sQ0FBQyxLQUFLLENBQUM7S0FDbEM7SUFDRCwrREFBK0Q7SUFDL0QsNERBQTREO0lBQzVELHlEQUF5RDtJQUN6RCxrRUFBa0U7SUFDbEUsT0FBTyxRQUFRLENBQUM7QUFDcEIsQ0FBQyxDQUFDIn0=