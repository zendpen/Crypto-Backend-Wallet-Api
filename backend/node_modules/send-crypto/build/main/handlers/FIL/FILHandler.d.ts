import BigNumber from "bignumber.js";
import { MessageObj } from "@glif/filecoin-message";
import { PromiEvent } from "../../lib/promiEvent";
import { Asset, Handler } from "../../types/types";
interface ConstructorOptions {
    apiAddress?: string;
    token?: string;
}
interface AddressOptions {
}
interface BalanceOptions extends AddressOptions {
    address?: string;
}
interface TxOptions extends Partial<MessageObj> {
    subtractFee?: boolean;
}
export declare class FILHandler implements Handler<ConstructorOptions, AddressOptions, BalanceOptions, TxOptions> {
    private readonly network;
    private readonly decimals;
    private readonly sharedState;
    constructor(privateKey: string, network: string, options?: ConstructorOptions, sharedState?: any);
    readonly handlesAsset: (asset: Asset) => boolean;
    readonly address: (asset: Asset, _options?: AddressOptions) => Promise<string>;
    readonly getBalance: (asset: Asset, options?: BalanceOptions) => Promise<BigNumber>;
    readonly getBalanceInSats: (asset: Asset, options?: BalanceOptions) => Promise<BigNumber>;
    readonly send: (to: string, value: BigNumber, asset: Asset, options?: TxOptions) => PromiEvent<string>;
    readonly sendSats: (to: string, valueIn: BigNumber, asset: Asset, options?: TxOptions) => PromiEvent<string>;
}
export {};
