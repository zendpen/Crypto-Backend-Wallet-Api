import { UTXO } from "../../lib/utxo";
export interface ScriptSig {
    hex: string;
    asm: string;
}
export interface Vin {
    txid: string;
    vout: number;
    sequence: number;
    n: number;
    scriptSig: ScriptSig;
    value: number;
    legacyAddress: string;
    cashAddress: string;
}
export interface ScriptPubKey {
    hex: string;
    asm: string;
    addresses: string[];
    type: string;
    cashAddrs: string[];
}
export interface Vout {
    value: string;
    n: number;
    scriptPubKey: ScriptPubKey;
    spentTxId: string;
    spentIndex: number;
    spentHeight: number;
}
export interface QueryTransaction {
    vin: Vin[];
    vout: Vout[];
    txid: string;
    version: number;
    locktime: number;
    blockhash: string;
    blockheight: number;
    confirmations: number;
    time: number;
    blocktime: number;
    firstSeenTime: number;
    valueOut: number;
    size: number;
    valueIn: number;
    fees: number;
}
export declare const broadcastTransaction: (testnet: boolean) => (txHex: string) => Promise<string>;
export declare const BitcoinDotCom: {
    fetchUTXO: (testnet: boolean) => (txHash: string, vOut: number) => Promise<UTXO>;
    fetchUTXOs: (testnet: boolean) => (address: string, confirmations: number) => Promise<readonly UTXO[]>;
    fetchTXs: (testnet: boolean) => (address: string, confirmations: number) => Promise<readonly UTXO[]>;
    broadcastTransaction: (testnet: boolean) => (txHex: string) => Promise<string>;
};
