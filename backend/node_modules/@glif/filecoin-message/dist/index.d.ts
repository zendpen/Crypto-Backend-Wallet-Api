export interface SerializableMessage {
    readonly to: string;
    readonly from: string;
    readonly nonce: number;
    readonly value: string;
    readonly gaspremium: string;
    readonly gaslimit: number;
    readonly gasfeecap: string;
    readonly method: number;
    readonly params: string | string[] | undefined;
}
export interface LotusMessage {
    To: string;
    From: string;
    Nonce: number;
    Value: string;
    GasPremium: string;
    GasLimit: number;
    GasFeeCap: string;
    Method: number;
    Params?: string | string[];
}
export interface SignedLotusMessage {
    Message: LotusMessage;
    Signature: {
        Type: number;
        Data: string;
    };
}
export interface MessageObj {
    to: string;
    from: string;
    nonce: number;
    value: any;
    method: number;
    gasPremium?: string | number;
    gasFeeCap?: string | number;
    gasLimit?: number;
    params?: string | string[];
}
export declare class Message {
    private to;
    private from;
    private nonce;
    private method;
    private value;
    private gasPremium;
    private gasFeeCap;
    private gasLimit;
    private params;
    constructor(msg: MessageObj);
    toLotusType: () => LotusMessage;
    toSerializeableType: () => SerializableMessage;
}
