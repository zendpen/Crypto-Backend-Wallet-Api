"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var bignumber_js_1 = __importDefault(require("bignumber.js"));
var gasOveruseNum = 11;
var gasOveruseDenom = 10;
exports.default = (function (gasUsed, gasLimit) {
    var gasUsedBN = new bignumber_js_1.default(gasUsed);
    var gasLimitBN = new bignumber_js_1.default(gasLimit);
    if (gasUsedBN.isZero()) {
        return gasLimitBN;
    }
    // over = gasLimit/gasUsed - 1 - 0.1
    // over = min(over, 1)
    // gasToBurn = (gasLimit - gasUsed) * over
    // so to factor out division from `over`
    // over*gasUsed = min(gasLimit - (11*gasUsed)/10, gasUsed)
    // gasToBurn = ((gasLimit - gasUsed)*over*gasUsed) / gasUsed
    var overuse = gasUsedBN
        .times(gasOveruseNum)
        .dividedToIntegerBy(gasOveruseDenom);
    var over = gasLimit.minus(overuse);
    if (over.isLessThan(0)) {
        return new bignumber_js_1.default(0);
    }
    if (over.isGreaterThan(gasUsedBN)) {
        over = gasUsedBN;
    }
    var gasToBurn = gasLimit.minus(gasUsedBN);
    gasToBurn = gasToBurn.times(over);
    gasToBurn = gasToBurn.dividedToIntegerBy(gasUsedBN);
    return new bignumber_js_1.default(gasToBurn.toFixed(0, 4));
});
//# sourceMappingURL=computeGasToBurn.js.map