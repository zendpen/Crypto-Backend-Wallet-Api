{"version":3,"sources":["../src/index.js"],"names":["axios","removeEmptyHeaders","headers","newHeaders","Object","keys","forEach","key","configureHeaders","token","reqHeaders","assign","Accept","Authorization","throwIfErrors","response","error","message","Error","deleteHeaders","opts","LotusRpcEngine","config","apiAddress","axiosOpts","method","params","post","jsonrpc","id","data","result"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,OAAO,EAAI;AAC3C,MAAMC,UAAU,GAAG,EAAnB;AACAC,EAAAA,MAAM,CAACC,IAAP,CAAYH,OAAZ,EAAqBI,OAArB,CAA6B,UAAAC,GAAG,EAAI;AAClC,QAAIL,OAAO,CAACK,GAAD,CAAX,EAAkBJ,UAAU,CAACI,GAAD,CAAV,GAAkBL,OAAO,CAACK,GAAD,CAAzB;AACnB,GAFD;AAGA,SAAOJ,UAAP;AACD,CANM;AAQP,OAAO,IAAMK,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAyB;AAAA,MAAxBN,OAAwB,uEAAd,EAAc;AAAA,MAAVO,KAAU;AACvD,MAAMC,UAAU,GAAGN,MAAM,CAACO,MAAP,CAAc,EAAd,EAAkBT,OAAlB,CAAnB;AACA,SAAOD,kBAAkB;AACvBW,IAAAA,MAAM,EAAE,KADe;AAEvBC,IAAAA,aAAa,EAAEJ,KAAK,oBAAaA,KAAb,IAAuB;AAFpB,KAGpBC,UAHoB,EAAzB;AAKD,CAPM;AASP,OAAO,IAAMI,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,QAAQ,EAAI;AACvC,MAAIA,QAAQ,CAACC,KAAb,EAAoB;AAClB,QAAID,QAAQ,CAACC,KAAT,CAAeC,OAAnB,EAA4B,MAAM,IAAIC,KAAJ,CAAUH,QAAQ,CAACC,KAAT,CAAeC,OAAzB,CAAN,CAA5B,KACK,MAAM,IAAIC,KAAJ,CAAU,uBAAV,CAAN;AACN,GAHD,MAGO;AACL,WAAOH,QAAP;AACD;AACF,CAPM;AASP,OAAO,IAAMI,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,IAAI,EAAI;AACnC,SAAOA,IAAI,CAAClB,OAAZ;AACA,SAAOkB,IAAP;AACD,CAHM;;IAKDC,c;AACJ,0BAAYC,MAAZ,EAAoB;AAAA;;AAAA;;AAClB,QAAI,CAACA,MAAL,EACE,MAAM,IAAIJ,KAAJ,CACJ,8DADI,CAAN;AAGF,SAAKK,UAAL,GAAkBD,MAAM,CAACC,UAAP,IAAqB,8BAAvC;AACA,SAAKd,KAAL,GAAaa,MAAM,CAACb,KAApB;AACA,SAAKP,OAAL,GAAeM,gBAAgB,CAACc,MAAD,aAACA,MAAD,4CAACA,MAAM,CAAEE,SAAT,sDAAC,kBAAmBtB,OAApB,EAA6BoB,MAAM,CAACb,KAApC,CAA/B;AACA,SAAKe,SAAL,GAAiBL,aAAa,CAACG,MAAM,CAACE,SAAP,IAAoB,EAArB,CAA9B;AACD;;;;;8FAEaC,M;;;;;;;;;;;;0CAAWC,M;AAAAA,kBAAAA,M;;;;uBACA1B,KAAK,CAAC2B,IAAN,CACrB,KAAKJ,UADgB,EAErB;AACEK,kBAAAA,OAAO,EAAE,KADX;AAEEH,kBAAAA,MAAM,qBAAcA,MAAd,CAFR;AAGEC,kBAAAA,MAAM,EAAEA,MAHV;AAIEG,kBAAAA,EAAE,EAAE;AAJN,iBAFqB;AASnB3B,kBAAAA,OAAO,EAAE,KAAKA;AATK,mBAUhB,KAAKsB,SAVW,E;;;;AAAfM,gBAAAA,I,qBAAAA,I;AAaRhB,gBAAAA,aAAa,CAACgB,IAAD,CAAb;iDACOA,IAAI,CAACC,M;;;;;;;;;;;;;;;;;;;;;AAIhB,eAAeV,cAAf","sourcesContent":["import axios from 'axios'\n\nexport const removeEmptyHeaders = headers => {\n  const newHeaders = {}\n  Object.keys(headers).forEach(key => {\n    if (headers[key]) newHeaders[key] = headers[key]\n  })\n  return newHeaders\n}\n\nexport const configureHeaders = (headers = {}, token) => {\n  const reqHeaders = Object.assign({}, headers)\n  return removeEmptyHeaders({\n    Accept: '*/*',\n    Authorization: token ? `Bearer ${token}` : null,\n    ...reqHeaders,\n  })\n}\n\nexport const throwIfErrors = response => {\n  if (response.error) {\n    if (response.error.message) throw new Error(response.error.message)\n    else throw new Error('Unknown jsonrpc error')\n  } else {\n    return response\n  }\n}\n\nexport const deleteHeaders = opts => {\n  delete opts.headers\n  return opts\n}\n\nclass LotusRpcEngine {\n  constructor(config) {\n    if (!config)\n      throw new Error(\n        'Must pass a config object to the LotusRpcEngine constructor.',\n      )\n    this.apiAddress = config.apiAddress || 'http://127.0.0.1:1234/rpc/v0'\n    this.token = config.token\n    this.headers = configureHeaders(config?.axiosOpts?.headers, config.token)\n    this.axiosOpts = deleteHeaders(config.axiosOpts || {})\n  }\n\n  async request(method, ...params) {\n    const { data } = await axios.post(\n      this.apiAddress,\n      {\n        jsonrpc: '2.0',\n        method: `Filecoin.${method}`,\n        params: params,\n        id: 1,\n      },\n      {\n        headers: this.headers,\n        ...this.axiosOpts,\n      },\n    )\n    throwIfErrors(data)\n    return data.result\n  }\n}\n\nexport default LotusRpcEngine\n"],"file":"index.js"}