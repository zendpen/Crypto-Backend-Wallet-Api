{"version":3,"sources":["../src/index.js"],"names":["axios","removeEmptyHeaders","headers","newHeaders","Object","keys","forEach","key","configureHeaders","token","reqHeaders","assign","Accept","Authorization","throwIfErrors","response","error","message","Error","deleteHeaders","opts","LotusRpcEngine","constructor","config","apiAddress","axiosOpts","request","method","params","data","post","jsonrpc","id","result"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,kBAAkB,GAAGC,OAAO,IAAI;AAC3C,QAAMC,UAAU,GAAG,EAAnB;AACAC,EAAAA,MAAM,CAACC,IAAP,CAAYH,OAAZ,EAAqBI,OAArB,CAA6BC,GAAG,IAAI;AAClC,QAAIL,OAAO,CAACK,GAAD,CAAX,EAAkBJ,UAAU,CAACI,GAAD,CAAV,GAAkBL,OAAO,CAACK,GAAD,CAAzB;AACnB,GAFD;AAGA,SAAOJ,UAAP;AACD,CANM;AAQP,OAAO,MAAMK,gBAAgB,GAAG,CAACN,OAAO,GAAG,EAAX,EAAeO,KAAf,KAAyB;AACvD,QAAMC,UAAU,GAAGN,MAAM,CAACO,MAAP,CAAc,EAAd,EAAkBT,OAAlB,CAAnB;AACA,SAAOD,kBAAkB;AACvBW,IAAAA,MAAM,EAAE,KADe;AAEvBC,IAAAA,aAAa,EAAEJ,KAAK,GAAI,UAASA,KAAM,EAAnB,GAAuB;AAFpB,KAGpBC,UAHoB,EAAzB;AAKD,CAPM;AASP,OAAO,MAAMI,aAAa,GAAGC,QAAQ,IAAI;AACvC,MAAIA,QAAQ,CAACC,KAAb,EAAoB;AAClB,QAAID,QAAQ,CAACC,KAAT,CAAeC,OAAnB,EAA4B,MAAM,IAAIC,KAAJ,CAAUH,QAAQ,CAACC,KAAT,CAAeC,OAAzB,CAAN,CAA5B,KACK,MAAM,IAAIC,KAAJ,CAAU,uBAAV,CAAN;AACN,GAHD,MAGO;AACL,WAAOH,QAAP;AACD;AACF,CAPM;AASP,OAAO,MAAMI,aAAa,GAAGC,IAAI,IAAI;AACnC,SAAOA,IAAI,CAAClB,OAAZ;AACA,SAAOkB,IAAP;AACD,CAHM;;AAKP,MAAMC,cAAN,CAAqB;AACnBC,EAAAA,WAAW,CAACC,MAAD,EAAS;AAAA;;AAClB,QAAI,CAACA,MAAL,EACE,MAAM,IAAIL,KAAJ,CACJ,8DADI,CAAN;AAGF,SAAKM,UAAL,GAAkBD,MAAM,CAACC,UAAP,IAAqB,8BAAvC;AACA,SAAKf,KAAL,GAAac,MAAM,CAACd,KAApB;AACA,SAAKP,OAAL,GAAeM,gBAAgB,CAACe,MAAD,aAACA,MAAD,4CAACA,MAAM,CAAEE,SAAT,sDAAC,kBAAmBvB,OAApB,EAA6BqB,MAAM,CAACd,KAApC,CAA/B;AACA,SAAKgB,SAAL,GAAiBN,aAAa,CAACI,MAAM,CAACE,SAAP,IAAoB,EAArB,CAA9B;AACD;;AAEKC,EAAAA,OAAN,CAAcC,MAAd,EAAsB,GAAGC,MAAzB,EAAiC;AAAA;;AAAA;AAC/B,YAAM;AAAEC,QAAAA;AAAF,gBAAiB7B,KAAK,CAAC8B,IAAN,CACrB,KAAI,CAACN,UADgB,EAErB;AACEO,QAAAA,OAAO,EAAE,KADX;AAEEJ,QAAAA,MAAM,EAAG,YAAWA,MAAO,EAF7B;AAGEC,QAAAA,MAAM,EAAEA,MAHV;AAIEI,QAAAA,EAAE,EAAE;AAJN,OAFqB;AASnB9B,QAAAA,OAAO,EAAE,KAAI,CAACA;AATK,SAUhB,KAAI,CAACuB,SAVW,EAAvB;AAaAX,MAAAA,aAAa,CAACe,IAAD,CAAb;AACA,aAAOA,IAAI,CAACI,MAAZ;AAf+B;AAgBhC;;AA5BkB;;AA+BrB,eAAeZ,cAAf","sourcesContent":["import axios from 'axios'\n\nexport const removeEmptyHeaders = headers => {\n  const newHeaders = {}\n  Object.keys(headers).forEach(key => {\n    if (headers[key]) newHeaders[key] = headers[key]\n  })\n  return newHeaders\n}\n\nexport const configureHeaders = (headers = {}, token) => {\n  const reqHeaders = Object.assign({}, headers)\n  return removeEmptyHeaders({\n    Accept: '*/*',\n    Authorization: token ? `Bearer ${token}` : null,\n    ...reqHeaders,\n  })\n}\n\nexport const throwIfErrors = response => {\n  if (response.error) {\n    if (response.error.message) throw new Error(response.error.message)\n    else throw new Error('Unknown jsonrpc error')\n  } else {\n    return response\n  }\n}\n\nexport const deleteHeaders = opts => {\n  delete opts.headers\n  return opts\n}\n\nclass LotusRpcEngine {\n  constructor(config) {\n    if (!config)\n      throw new Error(\n        'Must pass a config object to the LotusRpcEngine constructor.',\n      )\n    this.apiAddress = config.apiAddress || 'http://127.0.0.1:1234/rpc/v0'\n    this.token = config.token\n    this.headers = configureHeaders(config?.axiosOpts?.headers, config.token)\n    this.axiosOpts = deleteHeaders(config.axiosOpts || {})\n  }\n\n  async request(method, ...params) {\n    const { data } = await axios.post(\n      this.apiAddress,\n      {\n        jsonrpc: '2.0',\n        method: `Filecoin.${method}`,\n        params: params,\n        id: 1,\n      },\n      {\n        headers: this.headers,\n        ...this.axiosOpts,\n      },\n    )\n    throwIfErrors(data)\n    return data.result\n  }\n}\n\nexport default LotusRpcEngine\n"],"file":"index.js"}